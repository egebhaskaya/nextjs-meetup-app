{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\drave\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\PROGRAMMING\\\\React Projects\\\\udemy-react-course\\\\next-js-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetails from \"../../components/meetups/MeetupDetail\";\n\nvar MeetUpDetails = function MeetUpDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some address5, 12345 Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["C:/Users/drave/OneDrive/Masaüstü/PROGRAMMING/React Projects/udemy-react-course/next-js-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MeetUpDetails"],"mappings":";;;;;AACA,OAAOA,aAAP,MAA0B,uCAA1B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EACH,wHAFJ;AAIE,IAAA,KAAK,EAAE,gBAJT;AAKE,IAAA,OAAO,EAAE,gCALX;AAME,IAAA,WAAW,EAAE;AANf;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAXD;;KAAMA,a;;AAkDN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetUpDetails = () => {\r\n  return (\r\n    <MeetupDetails\r\n      image={\r\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      }\r\n      title={\"A First Meetup\"}\r\n      address={\"Some address5, 12345 Some City\"}\r\n      description={\"This is a first meetup\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:admin123456@cluster0.fdnkuck.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollections = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: true,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:admin123456@cluster0.fdnkuck.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollections = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollections.findOne({ _id: meetupId });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}